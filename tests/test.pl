#!/usr/bin/perl -w

use strict;

my $CALCC = "../build/calcc";

sub runit ($) {
    (my $cmd) = @_;
    system "$cmd";
    return $? >> 8;
}

sub test($) {
    (my $f) = @_;
    print "================================================\n";
    print "running test '$f'\n";
    open INF, "<$f" or die "cannot open '$f'";
    my $result;
    while (my $line = <INF>) {
	if ($line =~ /RESULT (.*)$/) {
	    $result = $1;
	}
    }
    close INF;
    die "cannot find RESULT line in '$f'" unless
      defined $result;
    die "unexpected RESULT '$result'" unless
      ($result eq "ERROR" ||
       $result =~ /^-?[0-9]+$/);
    my $res = runit("$CALCC < $f > /dev/null 2> out.ll");
    if ($result eq "ERROR") {
	if ($res == 1) {
	    print "compiler correctly detected erroneous input\n";
	    goto done;
	}
	die "compiler failed to correctly give exit code 1";
    }
    die "compiler failed to correctly give exit code 0"
      unless $res == 0;
    runit("clang out.ll ../driver.c");
    die "executable could not be generated"
      unless -f "a.out";
    $res = runit("./a.out > output.txt");
    die "executable did not run successfully"
      unless $res == 0;
    open INF, "<output.txt" or die "cannot read output generated by executable";
    my $prog_result;
    while (my $line = <INF>) {
	chomp $line;
	if ($line =~ /result = (-?[0-9]+)$/) {
	    $prog_result = $1;
	}
    }
    close INF;
    die "output from executable does not contain 'result = ...'"
      unless defined $prog_result;
    print "expected output = $result\n";
    print "actual output = $prog_result\n";
    die "output disagreement" unless $result eq $prog_result;
  done:
    print "TEST SUCCESSFUL\n";
    print "\n";
}

foreach my $f (@ARGV) {
    test($f);
}
